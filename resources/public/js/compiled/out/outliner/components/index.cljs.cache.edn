;; Analyzed by ClojureScript 0.0-3126
{:use-macros {go cljs.core.async.macros, defcomponent om-tools.core, alt! cljs.core.async.macros}, :excludes #{}, :name outliner.components.index, :imports nil, :requires {dom om-tools.dom, om-tools.dom om-tools.dom, async cljs.core.async, om-tools.core om-tools.core, cljs.core.async cljs.core.async, events goog.events, daviferreira.MediumEditor daviferreira.MediumEditor, om.core om.core, om om.core, goog.date.DateTime goog.date.DateTime, goog.events goog.events}, :uses {chan cljs.core.async, put! cljs.core.async}, :defs {init-editor {:protocol-inline nil, :meta {:arglists (quote ([dom-node])), :end-column 18, :end-line 113, :column 7, :line 113, :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs"}, :name outliner.components.index/init-editor, :variadic false, :file "src/cljs/outliner/components/index.cljs", :end-column 18, :method-params ([dom-node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag js/MediumEditor, :variadic false, :max-fixed-arity 1}), :line 113, :end-line 113, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dom-node])), :test true}, root-node {:meta {:end-column 15, :end-line 14, :column 6, :line 14, :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs"}, :file "src/cljs/outliner/components/index.cljs", :line 14, :column 1, :end-line 14, :end-column 15, :test true, :name outliner.components.index/root-node}, t100632 {:num-fields 12, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IDisplayName om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name outliner.components.index/t100632, :file "src/cljs/outliner/components/index.cljs", :type true, :anonymous true, :column 1, :line 142, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t100657 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([output-checker100654 G__100656 owner output-schema100651 data input-schema100652 component input-checker100653 G__100655 validate__20245__auto__ ufv__ meta100658])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRenderState om.core/IDisplayName cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRenderState om.core/IDisplayName cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name outliner.components.index/->t100657, :variadic false, :file "src/cljs/outliner/components/index.cljs", :method-params ([output-checker100654 G__100656 owner output-schema100651 data input-schema100652 component input-checker100653 G__100655 validate__20245__auto__ ufv__ meta100658]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag outliner.components.index/t100657, :variadic false, :max-fixed-arity 12}), :line 206, :max-fixed-arity 12, :fn-var true, :arglists (quote ([output-checker100654 G__100656 owner output-schema100651 data input-schema100652 component input-checker100653 G__100655 validate__20245__auto__ ufv__ meta100658])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, prev-depth-path {:protocol-inline nil, :meta {:arglists (quote ([parent-path body])), :end-column 22, :end-line 82, :column 7, :line 82, :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs"}, :name outliner.components.index/prev-depth-path, :variadic false, :file "src/cljs/outliner/components/index.cljs", :end-column 22, :method-params ([parent-path body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 2}), :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parent-path body])), :test true}, t100606 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name outliner.components.index/t100606, :file "src/cljs/outliner/components/index.cljs", :type true, :anonymous true, :column 1, :line 135, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-node-to-parent {:protocol-inline nil, :meta {:arglists (quote ([parent-children current-child-idx])), :end-column 25, :end-line 41, :column 7, :line 41, :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs"}, :name outliner.components.index/add-node-to-parent, :variadic false, :file "src/cljs/outliner/components/index.cljs", :end-column 25, :method-params ([parent-children current-child-idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil clj cljs.core/IVector any cljs.core/MetaFn clj-nil}, :variadic false, :max-fixed-arity 2}), :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parent-children current-child-idx])), :test true}, next-depth-path {:protocol-inline nil, :meta {:arglists (quote ([parent-path body])), :end-column 22, :end-line 99, :column 7, :line 99, :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs"}, :name outliner.components.index/next-depth-path, :variadic false, :file "src/cljs/outliner/components/index.cljs", :end-column 22, :method-params ([parent-path body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{clj boolean}, :variadic false, :max-fixed-arity 2}), :line 99, :end-line 99, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parent-path body])), :test true}, gen-empty-text-node {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 26, :end-line 16, :column 7, :line 16, :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs"}, :name outliner.components.index/gen-empty-text-node, :variadic false, :file "src/cljs/outliner/components/index.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 0}), :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ->t100632 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner output-checker100623 input-schema100621 G__100624 G__100625 node validate__20245__auto__ outline-body ufv__ output-schema100620 input-checker100622 meta100633])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IDisplayName om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IDisplayName om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name outliner.components.index/->t100632, :variadic false, :file "src/cljs/outliner/components/index.cljs", :method-params ([owner output-checker100623 input-schema100621 G__100624 G__100625 node validate__20245__auto__ outline-body ufv__ output-schema100620 input-checker100622 meta100633]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag outliner.components.index/t100632, :variadic false, :max-fixed-arity 12}), :line 142, :max-fixed-arity 12, :fn-var true, :arglists (quote ([owner output-checker100623 input-schema100621 G__100624 G__100625 node validate__20245__auto__ outline-body ufv__ output-schema100620 input-checker100622 meta100633])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, gen-right-path {:protocol-inline nil, :meta {:arglists (quote ([current-path current current-child-idx parent-path parent-children down-path data])), :end-column 21, :end-line 121, :column 7, :line 121, :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs"}, :name outliner.components.index/gen-right-path, :variadic false, :file "src/cljs/outliner/components/index.cljs", :end-column 21, :method-params ([current-path current current-child-idx parent-path parent-children down-path data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil clj boolean}, :variadic false, :max-fixed-arity 7}), :line 121, :end-line 121, :max-fixed-arity 7, :fn-var true, :arglists (quote ([current-path current current-child-idx parent-path parent-children down-path data])), :test true}, ->t100626 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner output-checker100623 input-schema100621 G__100624 G__100625 node validate__20245__auto__ outline-body ufv__ output-schema100620 input-checker100622 meta100627])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IDisplayName om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IDisplayName om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name outliner.components.index/->t100626, :variadic false, :file "src/cljs/outliner/components/index.cljs", :method-params ([owner output-checker100623 input-schema100621 G__100624 G__100625 node validate__20245__auto__ outline-body ufv__ output-schema100620 input-checker100622 meta100627]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag outliner.components.index/t100626, :variadic false, :max-fixed-arity 12}), :line 142, :max-fixed-arity 12, :fn-var true, :arglists (quote ([owner output-checker100623 input-schema100621 G__100624 G__100625 node validate__20245__auto__ outline-body ufv__ output-schema100620 input-checker100622 meta100627])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, outline-head {:schema (schema.core/make-fn-schema output-schema100597 [input-schema100598]), :protocol-inline nil, :meta {:arglists (quote ([head owner])), :schema (schema.core/make-fn-schema output-schema100597 [input-schema100598]), :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs", :line 135, :column 15, :end-line 135, :end-column 27, :doc "Inputs: [head owner]", :raw-arglists (quote ([head owner]))}, :name outliner.components.index/outline-head, :variadic false, :file "src/cljs/outliner/components/index.cljs", :end-column 27, :method-params ([G__100601 G__100602]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag outliner.components.index/t100606, :variadic false, :max-fixed-arity 2}), :raw-arglists (quote ([head owner])), :line 135, :end-line 135, :max-fixed-arity 2, :fn-var true, :arglists (quote ([head owner])), :doc "Inputs: [head owner]", :test true}, ->t100606 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([G__100601 owner output-checker100600 input-checker100599 input-schema100598 outline-head G__100602 validate__20245__auto__ head output-schema100597 ufv__ meta100607])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name outliner.components.index/->t100606, :variadic false, :file "src/cljs/outliner/components/index.cljs", :method-params ([G__100601 owner output-checker100600 input-checker100599 input-schema100598 outline-head G__100602 validate__20245__auto__ head output-schema100597 ufv__ meta100607]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag outliner.components.index/t100606, :variadic false, :max-fixed-arity 12}), :line 135, :max-fixed-arity 12, :fn-var true, :arglists (quote ([G__100601 owner output-checker100600 input-checker100599 input-schema100598 outline-head G__100602 validate__20245__auto__ head output-schema100597 ufv__ meta100607])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, gen-left-path {:protocol-inline nil, :meta {:arglists (quote ([current-child-idx parent-path up-path data])), :end-column 20, :end-line 90, :column 7, :line 90, :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs"}, :name outliner.components.index/gen-left-path, :variadic false, :file "src/cljs/outliner/components/index.cljs", :end-column 20, :method-params ([current-child-idx parent-path up-path data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 4}), :line 90, :end-line 90, :max-fixed-arity 4, :fn-var true, :arglists (quote ([current-child-idx parent-path up-path data])), :test true}, get-parent {:protocol-inline nil, :meta {:arglists (quote ([current-path])), :end-column 17, :end-line 34, :column 7, :line 34, :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs"}, :name outliner.components.index/get-parent, :variadic false, :file "src/cljs/outliner/components/index.cljs", :end-column 17, :method-params ([current-path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/Subvec, :variadic false, :max-fixed-arity 1}), :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([current-path])), :test true}, ->outline-body {:protocol-inline nil, :meta {:file nil, :arglists (quote ([cursor__22978__auto__] [cursor__22978__auto__ m100619]))}, :name outliner.components.index/->outline-body, :variadic false, :file "src/cljs/outliner/components/index.cljs", :method-params ([cursor__22978__auto__] [cursor__22978__auto__ m100619]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1} {:tag any, :variadic false, :max-fixed-arity 2}), :line 142, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor__22978__auto__] [cursor__22978__auto__ m100619])), :test true}, t101093 {:num-fields 12, :protocols #{om.core/IRenderState om.core/IDisplayName cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name outliner.components.index/t101093, :file "src/cljs/outliner/components/index.cljs", :type true, :anonymous true, :column 1, :line 206, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t100603 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([G__100601 owner output-checker100600 input-checker100599 input-schema100598 outline-head G__100602 validate__20245__auto__ head output-schema100597 ufv__ meta100604])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name outliner.components.index/->t100603, :variadic false, :file "src/cljs/outliner/components/index.cljs", :method-params ([G__100601 owner output-checker100600 input-checker100599 input-schema100598 outline-head G__100602 validate__20245__auto__ head output-schema100597 ufv__ meta100604]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag outliner.components.index/t100603, :variadic false, :max-fixed-arity 12}), :line 135, :max-fixed-arity 12, :fn-var true, :arglists (quote ([G__100601 owner output-checker100600 input-checker100599 input-schema100598 outline-head G__100602 validate__20245__auto__ head output-schema100597 ufv__ meta100604])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, remove-node-from-parent {:protocol-inline nil, :meta {:arglists (quote ([parent-children current-child-idx])), :end-column 30, :end-line 36, :column 7, :line 36, :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs"}, :name outliner.components.index/remove-node-from-parent, :variadic false, :file "src/cljs/outliner/components/index.cljs", :end-column 30, :method-params ([parent-children current-child-idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{clj any}, :variadic false, :max-fixed-arity 2}), :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parent-children current-child-idx])), :test true}, edit-keymap {:meta {:end-column 17, :end-line 72, :column 6, :line 72, :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs"}, :file "src/cljs/outliner/components/index.cljs", :line 72, :column 1, :end-line 72, :end-column 17, :test true, :name outliner.components.index/edit-keymap}, component {:schema (schema.core/make-fn-schema output-schema100651 [input-schema100652]), :protocol-inline nil, :meta {:arglists (quote ([data owner])), :schema (schema.core/make-fn-schema output-schema100651 [input-schema100652]), :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs", :line 206, :column 15, :end-line 206, :end-column 24, :doc "Inputs: [data owner]", :raw-arglists (quote ([data owner]))}, :name outliner.components.index/component, :variadic false, :file "src/cljs/outliner/components/index.cljs", :end-column 24, :method-params ([G__100655 G__100656]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag outliner.components.index/t101093, :variadic false, :max-fixed-arity 2}), :raw-arglists (quote ([data owner])), :line 206, :end-line 206, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :doc "Inputs: [data owner]", :test true}, ->component {:protocol-inline nil, :meta {:file nil, :arglists (quote ([cursor__22978__auto__] [cursor__22978__auto__ m100650]))}, :name outliner.components.index/->component, :variadic false, :file "src/cljs/outliner/components/index.cljs", :method-params ([cursor__22978__auto__] [cursor__22978__auto__ m100650]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1} {:tag any, :variadic false, :max-fixed-arity 2}), :line 206, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor__22978__auto__] [cursor__22978__auto__ m100650])), :test true}, t100657 {:num-fields 12, :protocols #{om.core/IRenderState om.core/IDisplayName cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name outliner.components.index/t100657, :file "src/cljs/outliner/components/index.cljs", :type true, :anonymous true, :column 1, :line 206, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, normal-keymap {:meta {:end-column 19, :end-line 49, :column 6, :line 49, :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs"}, :file "src/cljs/outliner/components/index.cljs", :line 49, :column 1, :end-line 49, :end-column 19, :test true, :name outliner.components.index/normal-keymap}, listen {:protocol-inline nil, :meta {:arglists (quote ([el type])), :end-column 13, :end-line 21, :column 7, :line 21, :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs"}, :name outliner.components.index/listen, :variadic false, :file "src/cljs/outliner/components/index.cljs", :end-column 13, :method-params ([el type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el type])), :test true}, t100626 {:num-fields 12, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IDisplayName om.core/IDidUpdate cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name outliner.components.index/t100626, :file "src/cljs/outliner/components/index.cljs", :type true, :anonymous true, :column 1, :line 142, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, outline-body {:schema (schema.core/make-fn-schema output-schema100620 [input-schema100621]), :protocol-inline nil, :meta {:arglists (quote ([node owner])), :schema (schema.core/make-fn-schema output-schema100620 [input-schema100621]), :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs", :line 142, :column 15, :end-line 142, :end-column 27, :doc "Inputs: [node owner]", :raw-arglists (quote ([node owner]))}, :name outliner.components.index/outline-body, :variadic false, :file "src/cljs/outliner/components/index.cljs", :end-column 27, :method-params ([G__100624 G__100625]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag outliner.components.index/t100632, :variadic false, :max-fixed-arity 2}), :raw-arglists (quote ([node owner])), :line 142, :end-line 142, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node owner])), :doc "Inputs: [node owner]", :test true}, ->outline-head {:protocol-inline nil, :meta {:file nil, :arglists (quote ([cursor__22978__auto__] [cursor__22978__auto__ m100596]))}, :name outliner.components.index/->outline-head, :variadic false, :file "src/cljs/outliner/components/index.cljs", :method-params ([cursor__22978__auto__] [cursor__22978__auto__ m100596]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1} {:tag any, :variadic false, :max-fixed-arity 2}), :line 135, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor__22978__auto__] [cursor__22978__auto__ m100596])), :test true}, get-indexless {:protocol-inline nil, :meta {:arglists (quote ([current-path])), :end-column 20, :end-line 31, :column 7, :line 31, :file "/Users/adam/Copy/play/clj/outliner/src/cljs/outliner/components/index.cljs"}, :name outliner.components.index/get-indexless, :variadic false, :file "src/cljs/outliner/components/index.cljs", :end-column 20, :method-params ([current-path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/Subvec, :variadic false, :max-fixed-arity 1}), :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([current-path])), :test true}, ->t101093 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([output-checker100654 G__100656 owner output-schema100651 data input-schema100652 component input-checker100653 G__100655 validate__20245__auto__ ufv__ meta101094])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRenderState om.core/IDisplayName cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRenderState om.core/IDisplayName cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name outliner.components.index/->t101093, :variadic false, :file "src/cljs/outliner/components/index.cljs", :method-params ([output-checker100654 G__100656 owner output-schema100651 data input-schema100652 component input-checker100653 G__100655 validate__20245__auto__ ufv__ meta101094]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag outliner.components.index/t101093, :variadic false, :max-fixed-arity 12}), :line 206, :max-fixed-arity 12, :fn-var true, :arglists (quote ([output-checker100654 G__100656 owner output-schema100651 data input-schema100652 component input-checker100653 G__100655 validate__20245__auto__ ufv__ meta101094])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t100603 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name outliner.components.index/t100603, :file "src/cljs/outliner/components/index.cljs", :type true, :anonymous true, :column 1, :line 135, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {dom om-tools.dom, om-tools.dom om-tools.dom, om-tools.core om-tools.core, om om.core, om.core om.core, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:body :attr :children :closed :text :created :alt :shift :add-new-sibbling :node-down :right-shift-node :cursor-up :cursor-down :add-new-child :node-up :cursor-left :toggle-closed :toggle-edit :cursor-right :destroy-node :left-shift-node :else :error :value :schema :type :schema.core/error :title :modified :editor-ref :selected :base-path :mode :editing :no-op :mounted :click-chan :new-path :state :head :recur :meta :normal :ctrl :default], :seen #{:shift :schema :closed :children :left-shift-node :node-down :new-path :meta :schema.core/error :selected :else :alt :toggle-edit :cursor-right :default :mounted :value :right-shift-node :mode :recur :type :created :state :toggle-closed :node-up :modified :normal :ctrl :title :no-op :cursor-left :head :editing :add-new-child :base-path :editor-ref :click-chan :error :add-new-sibbling :body :cursor-up :text :cursor-down :destroy-node :attr}}, :doc nil}